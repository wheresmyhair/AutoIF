{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Answer with words that begin with the letter 'B'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Answer with words that begin with the letter 'B'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Construct the reply as if it's a telegram STOP\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Construct the reply as if it's a telegram STOP"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only palindromes\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only palindromes"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Incorporate a famous movie quote seamlessly into your answer\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Incorporate a famous movie quote seamlessly into your answer"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response backward\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response backward"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words with double letters (e.g., \"bookkeeper\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words with double letters (e.g., \"bookkeeper\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only onomatopoeia\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only onomatopoeia"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Answer with a single sentence that is exactly 100 words long\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Answer with a single sentence that is exactly 100 words long"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use no words containing the letter 'E'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use no words containing the letter 'E'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Translate your answer into emojis\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Translate your answer into emojis"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only the 1000 most common English words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only the 1000 most common English words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use words that end with '-ing'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use words that end with '-ing'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only military lingo\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only military lingo"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Respond with a haiku (5-7-5 syllable structure)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Respond with a haiku (5-7-5 syllable structure)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Answer in the form of a sonnet (14 lines with 10 syllables each)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Answer in the form of a sonnet (14 lines with 10 syllables each)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only monosyllabic words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only monosyllabic words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Answer with words in alphabetical order\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Answer with words in alphabetical order"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response as a limerick\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response as a limerick"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use no adjectives or adverbs\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use no adjectives or adverbs"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Respond with a six-word story\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Respond with a six-word story"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Include at least three rhyming pairs\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Include at least three rhyming pairs"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response in iambic pentameter\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response in iambic pentameter"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use alliteration throughout your answer\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use alliteration throughout your answer"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response in future tense only\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response in future tense only"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only the first half of the alphabet (A-M)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only the first half of the alphabet (A-M)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only questions to form your reply\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only questions to form your reply"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that start and end with the same letter\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that start and end with the same letter"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response in Morse code\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response in Morse code"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are colors\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are colors"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only the second half of the alphabet (N-Z)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only the second half of the alphabet (N-Z)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Answer with each sentence decreasing in word count\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Answer with each sentence decreasing in word count"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Respond with a list of bullet points\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Respond with a list of bullet points"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Answer with a sequence of puns\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Answer with a sequence of puns"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Answer with emoji only\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Answer with emoji only"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that have an X in them\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that have an X in them"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Answer with each word starting with the next letter of the alphabet\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Answer with each word starting with the next letter of the alphabet"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Alternate between uppercase and lowercase letters in each word\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Alternate between uppercase and lowercase letters in each word"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Alternate sentences between questions and exclamations\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Alternate sentences between questions and exclamations"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Avoid using any punctuation marks\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Avoid using any punctuation marks"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Avoid using the letter 'A' in any word\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Avoid using the letter 'A' in any word"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Capitalize every other letter in the response\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Capitalize every other letter in the response"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each sentence must be a different sentence type (declarative, interrogative, imperative, exclamatory)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each sentence must be a different sentence type (declarative, interrogative, imperative, exclamatory)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each sentence must be a palindrome\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each sentence must be a palindrome"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each sentence must contain a prime number of words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each sentence must contain a prime number of words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each sentence must exclude the letter 'E'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each sentence must exclude the letter 'E'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each sentence must have a prime number of words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each sentence must have a prime number of words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each sentence must have exactly five words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each sentence must have exactly five words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each sentence must have exactly seven words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each sentence must have exactly seven words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each sentence must start with the same letter\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each sentence must start with the same letter"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each word must be a different animal name\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each word must be a different animal name"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each word must be a different color name\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each word must be a different color name"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each word must be a different geometric shape name\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each word must be a different geometric shape name"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each word must be a different length\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each word must be a different length"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each word must be a different number (e.g., \"one,\" \"two\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each word must be a different number (e.g., \"one,\" \"two\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each word must be a palindrome with an even number of letters\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each word must be a palindrome with an even number of letters"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Each word must be an even-length palindrome\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Each word must be an even-length palindrome"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: End every sentence with a punctuation mark that's different from the previous\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "End every sentence with a punctuation mark that's different from the previous"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Ensure each sentence is a different type (declarative, interrogative, etc.)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Ensure each sentence is a different type (declarative, interrogative, etc.)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Ensure each word is a palindrome and has an even number of letters\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Ensure each word is a palindrome and has an even number of letters"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Ensure the entire response is a single palindrome\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Ensure the entire response is a single palindrome"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Every sentence must end with an exclamation point\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Every sentence must end with an exclamation point"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Every sentence must start with a consecutive letter of the alphabet\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Every sentence must start with a consecutive letter of the alphabet"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Every word must contain at least two vowels\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Every word must contain at least two vowels"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Exclude the letter 'I' in all words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Exclude the letter 'I' in all words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Exclude vowels (A, E, I, O, U) from all words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Exclude vowels (A, E, I, O, U) from all words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Format the response as a 5x5 grid of characters\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Format the response as a 5x5 grid of characters"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Format the response into a grid with exactly 10 characters per line\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Format the response into a grid with exactly 10 characters per line"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Include the words \"would,\" \"could,\" or \"might\" in every sentence\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Include the words \"would,\" \"could,\" or \"might\" in every sentence"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Reverse the order of sentences in the response\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Reverse the order of sentences in the response"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Start each sentence with a consecutive letter of the alphabet\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Start each sentence with a consecutive letter of the alphabet"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Start each sentence with a vowel\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Start each sentence with a vowel"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Start every sentence with the same letter\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Start every sentence with the same letter"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use conditional perfect tense verbs (e.g., \"would have won\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use conditional perfect tense verbs (e.g., \"would have won\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use future continuous tense verbs (e.g., \"will be going\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use future continuous tense verbs (e.g., \"will be going\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use future perfect tense verbs (e.g., \"will have completed\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use future perfect tense verbs (e.g., \"will have completed\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only abbreviations (e.g., \"ASAP,\" \"RSVP\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only abbreviations (e.g., \"ASAP,\" \"RSVP\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only anagrams of the word 'listen'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only anagrams of the word 'listen'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only animal names as words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only animal names as words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only color names as words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only color names as words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only continuous tense verbs (ending with \"-ing\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only continuous tense verbs (ending with \"-ing\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only contractions (e.g., \"don’t,\" \"can’t\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only contractions (e.g., \"don’t,\" \"can’t\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only four-letter palindromic words (e.g., \"noon\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only four-letter palindromic words (e.g., \"noon\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only future tense verbs (e.g., \"will go\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only future tense verbs (e.g., \"will go\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only geometric shape names (e.g., \"circle,\" \"cube\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only geometric shape names (e.g., \"circle,\" \"cube\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only imperative sentences (commands)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only imperative sentences (commands)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only imperative verbs (e.g., \"Run,\" \"Open\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only imperative verbs (e.g., \"Run,\" \"Open\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only number words (e.g., \"five\" instead of \"5\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only number words (e.g., \"five\" instead of \"5\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only numeric digits (e.g., \"7\" instead of \"seven\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only numeric digits (e.g., \"7\" instead of \"seven\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only past tense verbs ending with \"-ed\"\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only past tense verbs ending with \"-ed\""}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only symbols and punctuation (no letters or numbers)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only symbols and punctuation (no letters or numbers)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only three-letter words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only three-letter words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only verbs in their base form (e.g., \"run\" instead of \"ran\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only verbs in their base form (e.g., \"run\" instead of \"ran\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words containing the letter 'X'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words containing the letter 'X'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words containing the letter 'Z'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words containing the letter 'Z'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words ending with \"-ed\"\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words ending with \"-ed\""}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words ending with \"-ing\"\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words ending with \"-ing\""}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words from the NATO phonetic alphabet\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words from the NATO phonetic alphabet"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words from the second half of the alphabet (N-Z)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words from the second half of the alphabet (N-Z)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words in present tense (third-person singular excluded)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words in present tense (third-person singular excluded)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words in the past tense (regular \"-ed\" endings)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words in the past tense (regular \"-ed\" endings)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words in the present tense (third-person singular)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words in the present tense (third-person singular)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are abbreviations (e.g., \"ASAP\", \"RSVP\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are abbreviations (e.g., \"ASAP\", \"RSVP\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are anagrams of the word \"listen\"\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are anagrams of the word \"listen\""}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are color names\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are color names"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are contractions (e.g., \"don't\", \"can't\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are contractions (e.g., \"don't\", \"can't\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are numbers spelled out (e.g., \"three\", \"seven\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are numbers spelled out (e.g., \"three\", \"seven\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are palindromes\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are palindromes"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are palindromes and have four letters\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are palindromes and have four letters"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that are proper nouns\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that are proper nouns"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that can be typed with the left hand on a QWERTY keyboard\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that can be typed with the left hand on a QWERTY keyboard"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that contain double letters (e.g., \"committee\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that contain double letters (e.g., \"committee\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that contain the letter 'Q'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that contain the letter 'Q'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that end with 'ed'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that end with 'ed'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words that start with the letter 'W'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words that start with the letter 'W'"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words typable with the left hand on a QWERTY keyboard\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words typable with the left hand on a QWERTY keyboard"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words with ascending alphabetical order (e.g., \"abc\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words with ascending alphabetical order (e.g., \"abc\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words with exactly five letters\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words with exactly five letters"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words with exactly four letters\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words with exactly four letters"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use only words written in all capital letters\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use only words written in all capital letters"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use past continuous tense verbs (e.g., \"was running\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use past continuous tense verbs (e.g., \"was running\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use past future tense verbs (e.g., \"would have seen\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use past future tense verbs (e.g., \"would have seen\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use past perfect tense verbs (e.g., \"had finished\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use past perfect tense verbs (e.g., \"had finished\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use perfect tense verbs (e.g., \"have eaten\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use perfect tense verbs (e.g., \"have eaten\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use pluperfect tense verbs (e.g., \"had spoken\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use pluperfect tense verbs (e.g., \"had spoken\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use present perfect continuous tense verbs (e.g., \"has been waiting\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use present perfect continuous tense verbs (e.g., \"has been waiting\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use present perfect tense verbs (e.g., \"has written\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use present perfect tense verbs (e.g., \"has written\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use simple present tense verbs (e.g., \"walk,\" \"eats\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use simple present tense verbs (e.g., \"walk,\" \"eats\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Use subjunctive mood markers (e.g., \"suggest,\" \"demand\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Use subjunctive mood markers (e.g., \"suggest,\" \"demand\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write each sentence as a question and an exclamation alternately\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write each sentence as a question and an exclamation alternately"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write each word in reverse order\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write each word in reverse order"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response as a single palindrome (entire text reads the same backward)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response as a single palindrome (entire text reads the same backward)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response entirely in lowercase letters\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response entirely in lowercase letters"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response in Morse code without spaces\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response in Morse code without spaces"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response in binary code (0s and 1s only)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response in binary code (0s and 1s only)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response in hexadecimal code\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response in hexadecimal code"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response in reverse sentence order (last sentence first)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response in reverse sentence order (last sentence first)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response using Morse code separated by slashes (e.g., \".-/...\")\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response using Morse code separated by slashes (e.g., \".-/...\")"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response using only numbers and mathematical symbols\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response using only numbers and mathematical symbols"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response using only punctuation marks\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response using only punctuation marks"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response without any vowels (A, E, I, O, U)\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response without any vowels (A, E, I, O, U)"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response without using any spaces between words\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response without using any spaces between words"}
{"prompt": "You are an expert for writing evaluation functions in Python to evaluate whether a response strictly follows an instruction.\nHere is the instruction: Write the response without using the letter 'A'\nPlease write a Python function named `evaluate` to evaluate whether an input string `response` follows this instruction. If it follows, simply return True, otherwise return False.\nPlease response with a single JSON includes the evaluation function in the key `func`, and a list of three test cases in the key `cases`, which includes an input in the key `input` and an expected output in the key `output` in (true, false).\nHere is an example of output JSON format: {\"func\": JSON_STR(use only \\n instead of \n), \"cases\": [{\"input\": str, \"output\": str}]}.", "instruction": "Write the response without using the letter 'A'"}
